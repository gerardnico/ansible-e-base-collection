# https://ansible.readthedocs.io/projects/molecule/getting-started/#inspecting-the-moleculeyml
---
# Driver provider
# https://ansible.readthedocs.io/projects/molecule/configuration/#driver
#
driver:
  name: docker
# Platforms define the instances to be tested, and the groups to which the instances belong.
# Instance to create (manage the type of distribution CentOS, Fedora, Debian)
# https://ansible.readthedocs.io/projects/molecule/configuration/#platforms
platforms:
  # These properties are literally read by tasks in `create.yml`
  # It's a property of community docker
  # * name is the name of the container
  # * image ...
  # You could have more than one image started
  # The command is hard written as `sleep 1d`
  #
  # There is also a docker driver which is completely other thing
  # https://github.com/ansible-community/molecule-plugins/tree/main/src/molecule_plugins/docker
  #
  - name: '${DOCK_X_CONTAINER}'
    image: '${DOCK_X_REGISTRY}/${DOCK_X_NAMESPACE}/${DOCK_X_NAME}:${DOCK_X_TAG}'
    hostname: '${ANS_X_OS_HOSTNAME}'
    pre_build_image: true
    override_command: false
    privileged: true
    published_ports:
      - "6443:6443"
      - "80:80"
      - "443:443"
    # Why run and tmp as tmpfs ???
    tmpfs:
      - /run
      - /tmp
    # Inventory group
    groups:
      - '${ANS_X_INVENTORY_GROUP_SERVER}'
      - '${ANS_X_INVENTORY_GROUP_ALL}'
    volumes:
      - /sys/fs/cgroup/warewulf.scope:/sys/fs/cgroup:rw

dependency:
  name: galaxy
  options:
    # Path relative to where you start molecule
    # ie from extensions
    requirements-file: molecule/default/requirements.yml
provisioner:
  name: ansible
  inventory:
    group_vars:
      k3s_cluster:
        ansible_user: root # mandatory
        ans_x_admin_username: admin
        ans_x_admin_public_key: ssh-rsa AAAAB3NzaC1yxxxx
        ans_x_k3s_token: jbHWvxxxx
        ans_x_k3s_version: v1.31.2+k3s1
    host_vars:
      # setting for the docker/platform instance named 'molecule-debian'
      molecule-server-debian:
        ans_x_os_hostname: kube.example.com
