---
# https://ansible.readthedocs.io/projects/molecule/getting-started/#inspecting-the-moleculeyml
# Driver provider
# https://ansible.readthedocs.io/projects/molecule/configuration/#driver
#
driver:
  name: docker
# Platforms define the instances to be tested, and the groups to which the instances belong.
# Instance to create (manage the type of distribution CentOS, Fedora, Debian)
# https://ansible.readthedocs.io/projects/molecule/configuration/#platforms
platforms:
  # These properties are literally read by tasks in the `create.yml` of the docker driver
  # https://github.com/ansible-community/molecule-plugins/tree/main/src/molecule_plugins/docker
  - name: '${DOCK_X_CONTAINER}'
    image: '${DOCK_X_REGISTRY}/${DOCK_X_NAMESPACE}/${DOCK_X_NAME}:${DOCK_X_TAG}'
    hostname: '${ANS_X_OS_HOSTNAME}'
    # or ${DOCK_X_CONTAINER}.docker.localhost
    pre_build_image: true
    override_command: false
    privileged: true
    # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_container_module.html#parameter-network_mode
    # Network should be created with `docker network create kube`
    # `nslookup kube.example.com` should return an ip
    network_mode: kube
    # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_container_module.html#parameter-etc_hosts
#    etc_hosts:
#      ${ANS_X_OS_HOSTNAME}: 127.0.0.1
    published_ports:
      - "6443:6443"
      - "80:80"
      - "443:443"
    # Why run and tmp as tmpfs ???
#    tmpfs:
#      - /run
#      - /tmp
    # Inventory group
    groups:
      - '${ANS_X_INVENTORY_GROUP_SERVER}'
      - '${ANS_X_INVENTORY_GROUP_ALL}'
    volumes:
       # /var/lib/rancher has to be a local filesystem such as ext4 or XFS.
       - /tmp/var/lib/rancher:/var/lib/rancher
    #  - /sys/fs/cgroup/warewulf.scope:/sys/fs/cgroup:rw

dependency:
  name: galaxy
  options:
    # Path relative to the project directory (from where you start molecule)
    requirements-file: molecule/docker/requirements.yml
provisioner:
  name: ansible
  inventory:
    group_vars:
      k3s_cluster:
        ansible_user: root # mandatory
        kube_x_admin_username: admin
        kube_x_admin_public_key: ssh-rsa AAAAB3NzaC1yxxxx
        kube_x_k3s_token: jbHWvxxxx
        kube_x_k3s_version: v1.31.2+k3s1
    host_vars:
      # setting for the docker/platform instance named 'molecule-debian'
      ${DOCK_X_CONTAINER}:
        kube_x_os_hostname: '${ANS_X_OS_HOSTNAME}'
#  playbooks:
#    converge: ../playbooks/converge.yml