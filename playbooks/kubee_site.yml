- name: Kubee OS
  hosts: k3s_cluster
  become: yes
  tasks:

    - name: Executing Os Role
      ansible.builtin.include_role:
        name: ans_e.ans_e_base.ans_e_os
      vars:
        ans_e_os_hostname: '{{ kubee_os_hostname | default() }}'
        ans_e_os_packages: '{{ kubee_os_packages | default([]) }}'
        ans_e_os_admin_username: '{{ kubee_os_admin_username | default() }}'
        ans_e_os_admin_public_key: '{{ kubee_os_admin_public_key | default() }}'

    - name: Installing Helm
      ansible.builtin.include_role:
        name: ans_e.ans_e_base.ans_e_helm
      vars:
        ans_e_helm_version: "{{ kubee_helm_version | default('3.16.3') }}"
        ans_e_helm_plugins: '{{ kubee_helm_plugins | default([]) }}'

    - name: Installing Longhorn Os Package
      when: 'kubee_longhorn_version is defined and kubee_longhorn_version != ""'
      ansible.builtin.include_role:
        name: ans_e.ans_e_base.ans_e_longhorn
      vars:
        ans_e_longhorn_version: '{{ kubee_longhorn_version }}'


# ansible.builtin.import_playbook: Works only as play
# It's not a task
# https://docs.ansible.com/ansible/2.4/playbooks_reuse_includes.html
# https://forum.ansible.com/t/missing-interpreter-line-for-builtin-modules/4242/3
- name: Install K3s
  ansible.builtin.import_playbook: k3s.orchestration.site.yml
  become: yes
  vars:
    # Token
    token: '{{ k3s_token }}'
    # The below args will create a loop and crash ansible
    # k3s_version: '{{ k3s_version }}'
    api_endpoint: "{{ hostvars[groups['server'][0]]['ansible_host'] | default(groups['server'][0]) }}"
    # extra_server_args should be a string
    # We could also --disable-helm-controller
    # https://docs.k3s.io/cli/server
    extra_server_args: "{{ ((k3s_extra_server_args | default([])) + ['--disable=traefik']) | join(' ') }}"

# Controle Node
# https://github.com/k3s-io/k3s-ansible/blob/master/roles/k3s_server/tasks/main.yml#L145
