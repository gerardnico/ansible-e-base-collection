---
apiVersion: v1
kind: Secret
metadata:
  name: '{{ ans_x_longhorn_frontend_basic_auth_secret_name }}'
  namespace: '{{ ans_x_longhorn_namespace }}'
# The values for all keys in the data field have to be base64-encoded strings.
# If the conversion to base64 string is not desirable, you can choose to specify the stringData field instead,
# which accepts arbitrary strings as values.
data:
  # one user by line
  users: |
    {{ ans_x_longhorn_frontend_basic_auth_users | map('b64encode') | join('    \n')}}
---
# Basic auth authentication
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: '{{ ans_x_longhorn_frontend_middleware_auth_name }}'
  namespace: '{{ ans_x_longhorn_namespace }}'
spec:
  basicAuth:
    secret: '{{ ans_x_longhorn_frontend_basic_auth_secret_name }}'
---
# The certificate
# (Because we use IngressRoute, it needs to be created manually)
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: '{{ ans_x_longhorn_frontend_cert_name }}'
  namespace: '{{ ans_x_longhorn_namespace }}'
  labels:
    # use cloudflare Dns
    "issuer-challenge": "dns01-cloudflare"
spec:
  commonName: '{{ ans_x_longhorn_hostname }}'
  secretName: '{{ ans_x_longhorn_frontend_cert_secret_name }}'
  dnsNames:
    - '{{ ans_x_longhorn_hostname }}'
  issuerRef:
    kind: ClusterIssuer
    name: '{{ ans_x_cert_manager_issuer_name }}'
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: longhorn-frontend
  namespace: '{{ ans_x_longhorn_namespace }}'
  # annotations:
  labels:
    app.kubernetes.io/name: longhorn-frontend
spec:
  entryPoints:
    - websecure
  tls:
    # in the IngressRoute namespace
    secretName: '{{ ans_x_longhorn_frontend_cert_secret_name }}'
  routes:
    - kind: Rule
      match: Host(`{{ ans_x_longhorn_hostname }}`)
      services:
        - name: longhorn-frontend
          port: 80
      middlewares:
        - name: '{{ ans_x_longhorn_frontend_middleware_auth_name }}'
---
