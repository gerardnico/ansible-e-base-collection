
# A group that is used in `wheel.sudoer` to allow sudo
- name: Create the wheel group (sudo)
  ansible.builtin.group:
    name: wheel
    state: present

- name: "User - Create the admin user"
  user:
    name: '{{ ans_e_os_admin_username }}'
    comment: The admin user
    state: present
    group: 'users'
    shell: /bin/bash
    # extra group
    groups:
      - wheel # The sudo admin group
    # no password, only key
    # password: "{{ ssh_user_password | password_hash('sha512') }}"

# Create a user
- name: Copy the sudoer file (sudo config file)
  template:
    src: 'wheel.sudoer'
    dest: '/etc/sudoers.d/wheel'
    mode: 0750

- name: Create .ssh directory
  ansible.builtin.file:
    path: "/home/{{ ans_e_os_admin_username }}/.ssh"
    state: directory
    mode: '0700'
    owner: "{{ ans_e_os_admin_username }}"

- name: 'Public key check'
  when: 'ans_e_os_admin_public_key is not defined'
  fail:
    msg: "The `ans_e_os_admin_public_key` is mandatory and was not found"

- name: Validate SSH admin public key
  ansible.builtin.assert:
    that:
      - "ans_e_os_admin_public_key is regex('^ssh-(rsa|dss|ecdsa|ed25519) [A-Za-z0-9+/=]+(?: .*)?$')"
    fail_msg: "Invalid ans_e_os_admin_public_key variable: Wrong SSH public key format"

# Or https://github.com/ansible-collections/ansible.posix/blob/main/docs/ansible.posix.authorized_key_module.rst
- name: Add SSH key to authorized_keys
  ansible.builtin.copy:
    content: "{{ ans_e_os_admin_public_key }}"
    dest: "/home/{{ ans_e_os_admin_username }}/.ssh/authorized_keys"
    mode: '0600'
    owner: "{{ ans_e_os_admin_username }}"
